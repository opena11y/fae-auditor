# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-02 20:18
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pageResults', '__first__'),
        ('websiteResults', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='MIpageEvents',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_events_count', models.IntegerField(default=0)),
                ('load_event_count', models.IntegerField(default=0)),
                ('blur_event_count', models.IntegerField(default=0)),
                ('focus_event_count', models.IntegerField(default=0)),
                ('change_event_count', models.IntegerField(default=0)),
                ('drag_events_count', models.IntegerField(default=0)),
                ('click_event_count', models.IntegerField(default=0)),
                ('double_click_event_count', models.IntegerField(default=0)),
                ('keyboard_events_count', models.IntegerField(default=0)),
                ('mouse_events_count', models.IntegerField(default=0)),
                ('touch_events_count', models.IntegerField(default=0)),
                ('pointer_events_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_events', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: Events',
                'verbose_name_plural': 'Page Markup: Events',
            },
        ),
        migrations.CreateModel(
            name='MIpageForms',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_forms_count', models.IntegerField(default=0)),
                ('input_button_count', models.IntegerField(default=0)),
                ('input_checkbox_count', models.IntegerField(default=0)),
                ('input_color_count', models.IntegerField(default=0)),
                ('input_date_count', models.IntegerField(default=0)),
                ('input_datetime_count', models.IntegerField(default=0)),
                ('input_email_count', models.IntegerField(default=0)),
                ('input_file_count', models.IntegerField(default=0)),
                ('input_image_count', models.IntegerField(default=0)),
                ('input_month_count', models.IntegerField(default=0)),
                ('input_number_count', models.IntegerField(default=0)),
                ('input_password_count', models.IntegerField(default=0)),
                ('input_radio_count', models.IntegerField(default=0)),
                ('input_range_count', models.IntegerField(default=0)),
                ('input_reset_count', models.IntegerField(default=0)),
                ('input_search_count', models.IntegerField(default=0)),
                ('input_submit_count', models.IntegerField(default=0)),
                ('input_tel_count', models.IntegerField(default=0)),
                ('input_text_count', models.IntegerField(default=0)),
                ('input_time_count', models.IntegerField(default=0)),
                ('input_url_count', models.IntegerField(default=0)),
                ('input_week_count', models.IntegerField(default=0)),
                ('autofocus_attribute_count', models.IntegerField(default=0)),
                ('placeholder_attribute_count', models.IntegerField(default=0)),
                ('pattern_attribute_count', models.IntegerField(default=0)),
                ('required_attribute_count', models.IntegerField(default=0)),
                ('output_count', models.IntegerField(default=0)),
                ('progress_count', models.IntegerField(default=0)),
                ('meter_count', models.IntegerField(default=0)),
                ('fieldset_count', models.IntegerField(default=0)),
                ('label_count', models.IntegerField(default=0)),
                ('legend_count', models.IntegerField(default=0)),
                ('title_attribute_count', models.IntegerField(default=0)),
                ('button_count', models.IntegerField(default=0)),
                ('select_count', models.IntegerField(default=0)),
                ('textarea_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_controls', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: Form Controls',
                'verbose_name_plural': 'Page Markup: Form Controls',
            },
        ),
        migrations.CreateModel(
            name='MIpageHeadings',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_headings_count', models.IntegerField(default=0)),
                ('h1_count', models.IntegerField(default=0)),
                ('h2_count', models.IntegerField(default=0)),
                ('h3_count', models.IntegerField(default=0)),
                ('h4_count', models.IntegerField(default=0)),
                ('h5_count', models.IntegerField(default=0)),
                ('h6_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_headgings', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: Heading (H1-H6)',
                'verbose_name_plural': 'Page Markup: Headings (H1-H6)',
            },
        ),
        migrations.CreateModel(
            name='MIpageImages',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_images_count', models.IntegerField(default=0)),
                ('img_count', models.IntegerField(default=0)),
                ('canvas_count', models.IntegerField(default=0)),
                ('svg_count', models.IntegerField(default=0)),
                ('figure_count', models.IntegerField(default=0)),
                ('figcaption_count', models.IntegerField(default=0)),
                ('alt_attribute_count', models.IntegerField(default=0)),
                ('longdesc_attribute_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_images', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: Image',
                'verbose_name_plural': 'Page Markup: Images',
            },
        ),
        migrations.CreateModel(
            name='MIpageLandmarks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_landmarks_count', models.IntegerField(default=0)),
                ('role_application_count', models.IntegerField(default=0)),
                ('role_banner_count', models.IntegerField(default=0)),
                ('role_complementary_count', models.IntegerField(default=0)),
                ('role_contentinfo_count', models.IntegerField(default=0)),
                ('role_form_count', models.IntegerField(default=0)),
                ('role_main_count', models.IntegerField(default=0)),
                ('role_navigation_count', models.IntegerField(default=0)),
                ('role_region_count', models.IntegerField(default=0)),
                ('role_search_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_landmarks', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: Landmark',
                'verbose_name_plural': 'Page Markup: Landmarks',
            },
        ),
        migrations.CreateModel(
            name='MIpageLinks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_links_count', models.IntegerField(default=0)),
                ('a_count', models.IntegerField(default=0)),
                ('area_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_links', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: Link',
                'verbose_name_plural': 'Page Markup: Links',
            },
        ),
        migrations.CreateModel(
            name='MIpageLists',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_lists_count', models.IntegerField(default=0)),
                ('ul_count', models.IntegerField(default=0)),
                ('ol_count', models.IntegerField(default=0)),
                ('li_count', models.IntegerField(default=0)),
                ('dl_count', models.IntegerField(default=0)),
                ('dt_count', models.IntegerField(default=0)),
                ('dd_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_lists', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: List',
                'verbose_name_plural': 'Page Markup: Lists',
            },
        ),
        migrations.CreateModel(
            name='MIpageLives',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_lives_count', models.IntegerField(default=0)),
                ('aria_live_count', models.IntegerField(default=0)),
                ('role_alert_count', models.IntegerField(default=0)),
                ('role_status_count', models.IntegerField(default=0)),
                ('role_log_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_lives', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: ARIA Live Region',
                'verbose_name_plural': 'Page Markup: ARIA Live Regions',
            },
        ),
        migrations.CreateModel(
            name='MIpageMedia',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_media_count', models.IntegerField(default=0)),
                ('audio_count', models.IntegerField(default=0)),
                ('embed_count', models.IntegerField(default=0)),
                ('object_count', models.IntegerField(default=0)),
                ('video_count', models.IntegerField(default=0)),
                ('track_count', models.IntegerField(default=0)),
                ('source_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_media', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: Media',
                'verbose_name_plural': 'Page Markup: Media',
            },
        ),
        migrations.CreateModel(
            name='MIpageSections',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_sections_count', models.IntegerField(default=0)),
                ('address_count', models.IntegerField(default=0)),
                ('article_count', models.IntegerField(default=0)),
                ('aside_count', models.IntegerField(default=0)),
                ('details_count', models.IntegerField(default=0)),
                ('dialog_count', models.IntegerField(default=0)),
                ('footer_count', models.IntegerField(default=0)),
                ('header_count', models.IntegerField(default=0)),
                ('main_count', models.IntegerField(default=0)),
                ('nav_count', models.IntegerField(default=0)),
                ('section_count', models.IntegerField(default=0)),
                ('summary_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_sections', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: HTML5 Section',
                'verbose_name_plural': 'Page Markup: HTML5 Sections',
            },
        ),
        migrations.CreateModel(
            name='MIpageStructures',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_structures_count', models.IntegerField(default=0)),
                ('role_article_count', models.IntegerField(default=0)),
                ('role_directory_count', models.IntegerField(default=0)),
                ('role_document_count', models.IntegerField(default=0)),
                ('role_heading_count', models.IntegerField(default=0)),
                ('role_math_count', models.IntegerField(default=0)),
                ('role_note_count', models.IntegerField(default=0)),
                ('role_presentation_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_structures', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: ARIA Structure',
                'verbose_name_plural': 'Page Markup: ARIA Structures',
            },
        ),
        migrations.CreateModel(
            name='MIpageSummary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_element_count', models.IntegerField(default=0)),
                ('all_hidden_count', models.IntegerField(default=0)),
                ('all_offscreen_count', models.IntegerField(default=0)),
                ('frame_count', models.IntegerField(default=0)),
                ('iframe_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_summary', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: Summary',
                'verbose_name_plural': 'Page Markup: Summary',
            },
        ),
        migrations.CreateModel(
            name='MIpageTables',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_tables_count', models.IntegerField(default=0)),
                ('table_count', models.IntegerField(default=0)),
                ('th_count', models.IntegerField(default=0)),
                ('td_count', models.IntegerField(default=0)),
                ('caption_count', models.IntegerField(default=0)),
                ('summary_attribute_count', models.IntegerField(default=0)),
                ('scope_attribute_count', models.IntegerField(default=0)),
                ('headers_attribute_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_tables', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: Table',
                'verbose_name_plural': 'Page Markup: Tables',
            },
        ),
        migrations.CreateModel(
            name='MIpageWidgets',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('all_widgets_count', models.IntegerField(default=0)),
                ('role_button_count', models.IntegerField(default=0)),
                ('role_link_count', models.IntegerField(default=0)),
                ('aria_describedby_count', models.IntegerField(default=0)),
                ('aria_describedat_count', models.IntegerField(default=0)),
                ('aria_labelledby_count', models.IntegerField(default=0)),
                ('aria_label_count', models.IntegerField(default=0)),
                ('aria_owns_count', models.IntegerField(default=0)),
                ('aria_activedescendant_count', models.IntegerField(default=0)),
                ('aria_flowto_count', models.IntegerField(default=0)),
                ('aria_controls_count', models.IntegerField(default=0)),
                ('aria_hidden_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_widgets', to='pageResults.PageResult')),
            ],
            options={
                'verbose_name': 'Page Markup: ARIA Widget',
                'verbose_name_plural': 'Page Markup: ARIA Widgets',
            },
        ),
        migrations.CreateModel(
            name='PageMarkup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('hidden_count', models.IntegerField(default=0)),
                ('offscreen_count', models.IntegerField(default=0)),
                ('total_count', models.IntegerField(default=0)),
                ('frame_count', models.IntegerField(default=0)),
                ('iframe_count', models.IntegerField(default=0)),
                ('page_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_page_markups', to='pageResults.PageResult')),
            ],
        ),
        migrations.CreateModel(
            name='PageMarkupGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=24, verbose_name='Group Name')),
                ('count', models.IntegerField(default=0)),
                ('page_markup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_markups', to='markupInfo.PageMarkup')),
            ],
        ),
        migrations.CreateModel(
            name='PageMarkupItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('element', models.CharField(max_length=24, verbose_name='Element')),
                ('attribute', models.CharField(max_length=24, verbose_name='Attribute')),
                ('event', models.CharField(max_length=24, verbose_name='Event')),
                ('count', models.IntegerField(default=0)),
                ('page_markup_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_markup_groups', to='markupInfo.PageMarkupGroup')),
            ],
        ),
        migrations.CreateModel(
            name='WebsiteMarkup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('hidden_count', models.IntegerField(default=0)),
                ('offscreen_count', models.IntegerField(default=0)),
                ('total_count', models.IntegerField(default=0)),
                ('frame_count', models.IntegerField(default=0)),
                ('iframe_count', models.IntegerField(default=0)),
                ('ws_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mi_ws_results', to='websiteResults.WebsiteResult')),
            ],
        ),
        migrations.CreateModel(
            name='WebsiteMarkupGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=24, verbose_name='Group Name')),
                ('count', models.IntegerField(default=0)),
                ('ws_markup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ws_markups', to='markupInfo.WebsiteMarkup')),
            ],
        ),
        migrations.CreateModel(
            name='WebsiteMarkupItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('element', models.CharField(max_length=24, verbose_name='Element')),
                ('attribute', models.CharField(max_length=24, verbose_name='Attribute')),
                ('event', models.CharField(max_length=24, verbose_name='Event')),
                ('count', models.IntegerField(default=0)),
                ('ws_markup_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ws_markup_groups', to='markupInfo.WebsiteMarkupGroup')),
            ],
        ),
        migrations.AddField(
            model_name='pagemarkupitem',
            name='ws_markup_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_ws_markup_items', to='markupInfo.WebsiteMarkupItem'),
        ),
        migrations.AddField(
            model_name='pagemarkupgroup',
            name='ws_markup_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_ws_markup_groups', to='markupInfo.WebsiteMarkupGroup'),
        ),
    ]
